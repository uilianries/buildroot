#include <stdlib.h>
#include <string.h>
#include <stdio.h>

#include <wiringPi.h>
#include <wiringPiI2C.h>


static int buffer[1024] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xc0,0xc0,0xe0,0xf0,0xf0,0xf8,0xfc,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,0xfe,0xfc,0xfc,0xf8,0xf0,0xf0,0xe0,0xc0,0xc0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xc0,0xc0,0xe0,0xf0,0xf8,0xf8,0xfc,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x06,0xfc,0xfc,0xf8,0xf0,0xf0,0xe0,0xc0,0xc0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0xf8,0xfc,0xfc,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfc,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0xbf,0xbf,0xdf,0xef,0xef,0xf7,0xf7,0xfb,0x7d,0x7d,0x3e,0x7e,0x7f,0xfe,0xfe,0xfd,0xfd,0xfb,0xfb,0xf7,0xf7,0xef,0xef,0xdf,0xdf,0xbf,0xbf,0x7f,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x7f,0x7f,0x7f,0xbf,0xbf,0xdf,0xef,0xef,0xf7,0xfb,0xfb,0xfd,0xfd,0xfe,0xfe,0xff,0x1f,0x0f,0x03,0x03,0x01,0xf0,0xf0,0xfc,0xfc,0xfc,0xfc,0xfe,0xfe,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x3f,0x3f,0x7f,0xfe,0xfe,0xfd,0xfd,0xfb,0xfb,0xf7,0xf7,0xef,0xef,0xdf,0xdf,0xbf,0xbf,0x7f,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x0c,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0xf8,0xf0,0xf0,0xe0,0xc3,0xc7,0xc7,0xcf,0x8f,0x8f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x9f,0x8f,0xcf,0xc7,0xc7,0xc1,0xf0,0xf0,0xf8,0xf8,0xfc,0xfe,0xff,0x7f,0x3f,0x3f,0x3f,0x1f,0x0f,0x0f,0x0f,0x07,0x03,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x3f,0x7f,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x7f,0x3f,0x3f,0x1f,0x1f,0x0f,0x0f,0x07,0x07,0x03,0x03,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};


int main(void) {
    int i2cd = 0;

////// Init Setup
    i2cd = wiringPiI2CSetup(0x3C);
    if (i2cd < 0) {
		fprintf(stderr, "Unable to initialise I2C:\n");
		return EXIT_FAILURE;
	}
  	wiringPiI2CWriteReg8(i2cd, 0x00, 0xAE);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xD5);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x80);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xA8);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x3F);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xD3);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x00);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x40);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x8D);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x8D);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x14);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x20);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x00);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xB0);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xC8);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xDA);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x12);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x81);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xCF);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xD9);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xF1);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xDB);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x40);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xA4);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xA6);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x2E);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0xAF);

/////// Display
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x21);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x00);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x7F);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x22);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x00);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x07);
    wiringPiI2CWriteReg8(i2cd, 0x00, 0x07);

    for (int i=0; i < 1024; i++) {
        wiringPiI2CWriteReg8(i2cd, 0x40, buffer[i]);
    }

    return EXIT_SUCCESS;
}